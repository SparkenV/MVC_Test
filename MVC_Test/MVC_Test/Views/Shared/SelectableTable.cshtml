@using BLL.Models;
@model SelectableTableViewModel;

<table class="table table-hover">
    <thead>
        <tr>
            @foreach (var item in Model.ColumnNames)
            {
                <th scope="col">@item</th>
            }
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.SelectableItems.Count; i++)
        {
            <tr onclick="calc('@Model.SelectableItems[i].Id')">
                <td>
                    @Html.CheckBox(
                        $"SelectableTableViewModel.SelectableItems[{i}].Selected",
                        Model.SelectableItems[i].Selected, 
                        new {id = $"checkbox-{@Model.SelectableItems[i].Id}"})
                </td>
                <td>
                    @Html.Label($"SelectableTableViewModel.SelectableItems[{i}].Id", Model.SelectableItems[i].Id)
                    @Html.Hidden($"SelectableTableViewModel.SelectableItems[{i}].Id", Model.SelectableItems[i].Id)
                </td>
                <td>
                    @Html.Label($"SelectableTableViewModel.SelectableItems[{i}].Name", Model.SelectableItems[i].Name)
                    @Html.Hidden($"SelectableTableViewModel.SelectableItems[{i}].Name", Model.SelectableItems[i].Name)
                </td>
                <td>
                    @Html.Label($"SelectableTableViewModel.SelectableItems[{i}].Type", Model.SelectableItems[i].Type)
                    @Html.Hidden($"SelectableTableViewModel.SelectableItems[{i}].Type", Model.SelectableItems[i].Type)
                </td>
                <td>
                    @Html.Label($"SelectableTableViewModel.SelectableItems[{i}].Description", Model.SelectableItems[i].Description)
                    @Html.Hidden($"SelectableTableViewModel.SelectableItems[{i}].Description", Model.SelectableItems[i].Description)
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function calc(id) {
        console.log(id);
        document.getElementById("checkbox-" + id).checked = !document.getElementById("checkbox-" + id).checked
    }
</script>